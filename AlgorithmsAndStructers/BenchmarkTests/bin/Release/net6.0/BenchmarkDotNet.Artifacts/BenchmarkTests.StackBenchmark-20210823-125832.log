// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Кодинг\Проекты C# (VS Community)\Практика и уроки\AlgorithmsAndStructers\BenchmarkTests\bin\Release\net6.0\187b0782-105b-42f3-9a1c-dbcbf9b47c72
// command took 2,03s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Кодинг\Проекты C# (VS Community)\Практика и уроки\AlgorithmsAndStructers\BenchmarkTests\bin\Release\net6.0\187b0782-105b-42f3-9a1c-dbcbf9b47c72
// command took 14,28s and exited with 1
// start dotnet build -c Release  --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Кодинг\Проекты C# (VS Community)\Практика и уроки\AlgorithmsAndStructers\BenchmarkTests\bin\Release\net6.0\187b0782-105b-42f3-9a1c-dbcbf9b47c72
// command took 3,62s and exited with 0
// ***** Done, took 00:00:20 (20.03 sec)   *****
// Found 2 benchmarks:
//   StackBenchmark.DefaultListBenchmarkPush: DefaultJob
//   StackBenchmark.DefaultListBenchmarkPop: DefaultJob

// **************************
// Benchmark: StackBenchmark.DefaultListBenchmarkPush: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "187b0782-105b-42f3-9a1c-dbcbf9b47c72.dll" --benchmarkName "BenchmarkTests.StackBenchmark.DefaultListBenchmarkPush" --job "Default" --benchmarkId 0 in D:\Кодинг\Проекты C# (VS Community)\Практика и уроки\AlgorithmsAndStructers\BenchmarkTests\bin\Release\net6.0\187b0782-105b-42f3-9a1c-dbcbf9b47c72\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.37719), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 572500.00 ns, 572.5000 us/op
WorkloadJitting  1: 1 op, 606800.00 ns, 606.8000 us/op

OverheadJitting  2: 16 op, 303100.00 ns, 18.9438 us/op
WorkloadJitting  2: 16 op, 456800.00 ns, 28.5500 us/op

WorkloadPilot    1: 16 op, 6400.00 ns, 400.0000 ns/op
WorkloadPilot    2: 32 op, 8700.00 ns, 271.8750 ns/op
WorkloadPilot    3: 64 op, 11700.00 ns, 182.8125 ns/op
WorkloadPilot    4: 128 op, 12000.00 ns, 93.7500 ns/op
WorkloadPilot    5: 256 op, 18400.00 ns, 71.8750 ns/op
WorkloadPilot    6: 512 op, 42200.00 ns, 82.4219 ns/op
WorkloadPilot    7: 1024 op, 71000.00 ns, 69.3359 ns/op
WorkloadPilot    8: 2048 op, 153500.00 ns, 74.9512 ns/op
WorkloadPilot    9: 4096 op, 308100.00 ns, 75.2197 ns/op
WorkloadPilot   10: 8192 op, 612100.00 ns, 74.7192 ns/op
WorkloadPilot   11: 16384 op, 1162800.00 ns, 70.9717 ns/op
WorkloadPilot   12: 32768 op, 2532500.00 ns, 77.2858 ns/op
WorkloadPilot   13: 65536 op, 4641400.00 ns, 70.8221 ns/op
WorkloadPilot   14: 131072 op, 10023000.00 ns, 76.4694 ns/op
WorkloadPilot   15: 262144 op, 21398400.00 ns, 81.6284 ns/op
WorkloadPilot   16: 524288 op, 41583600.00 ns, 79.3144 ns/op
WorkloadPilot   17: 1048576 op, 85101000.00 ns, 81.1586 ns/op
WorkloadPilot   18: 2097152 op, 162787100.00 ns, 77.6229 ns/op
WorkloadPilot   19: 4194304 op, 330623300.00 ns, 78.8267 ns/op
WorkloadPilot   20: 8388608 op, 649376200.00 ns, 77.4117 ns/op

OverheadWarmup   1: 8388608 op, 26435700.00 ns, 3.1514 ns/op
OverheadWarmup   2: 8388608 op, 24084900.00 ns, 2.8711 ns/op
OverheadWarmup   3: 8388608 op, 25459000.00 ns, 3.0349 ns/op
OverheadWarmup   4: 8388608 op, 24923400.00 ns, 2.9711 ns/op
OverheadWarmup   5: 8388608 op, 25289400.00 ns, 3.0147 ns/op
OverheadWarmup   6: 8388608 op, 29026700.00 ns, 3.4603 ns/op
OverheadWarmup   7: 8388608 op, 27244800.00 ns, 3.2478 ns/op

OverheadActual   1: 8388608 op, 24630200.00 ns, 2.9361 ns/op
OverheadActual   2: 8388608 op, 24594800.00 ns, 2.9319 ns/op
OverheadActual   3: 8388608 op, 26347800.00 ns, 3.1409 ns/op
OverheadActual   4: 8388608 op, 24404100.00 ns, 2.9092 ns/op
OverheadActual   5: 8388608 op, 24537500.00 ns, 2.9251 ns/op
OverheadActual   6: 8388608 op, 28032300.00 ns, 3.3417 ns/op
OverheadActual   7: 8388608 op, 28364600.00 ns, 3.3813 ns/op
OverheadActual   8: 8388608 op, 30246600.00 ns, 3.6057 ns/op
OverheadActual   9: 8388608 op, 26887300.00 ns, 3.2052 ns/op
OverheadActual  10: 8388608 op, 16307200.00 ns, 1.9440 ns/op
OverheadActual  11: 8388608 op, 15764200.00 ns, 1.8792 ns/op
OverheadActual  12: 8388608 op, 20495300.00 ns, 2.4432 ns/op
OverheadActual  13: 8388608 op, 20360800.00 ns, 2.4272 ns/op
OverheadActual  14: 8388608 op, 20455300.00 ns, 2.4385 ns/op
OverheadActual  15: 8388608 op, 21862800.00 ns, 2.6062 ns/op
OverheadActual  16: 8388608 op, 16167700.00 ns, 1.9273 ns/op
OverheadActual  17: 8388608 op, 19095600.00 ns, 2.2764 ns/op
OverheadActual  18: 8388608 op, 17580200.00 ns, 2.0957 ns/op
OverheadActual  19: 8388608 op, 19702000.00 ns, 2.3487 ns/op
OverheadActual  20: 8388608 op, 19422700.00 ns, 2.3154 ns/op

WorkloadWarmup   1: 8388608 op, 445012200.00 ns, 53.0496 ns/op
WorkloadWarmup   2: 8388608 op, 838156300.00 ns, 99.9160 ns/op
WorkloadWarmup   3: 8388608 op, 449410700.00 ns, 53.5739 ns/op
WorkloadWarmup   4: 8388608 op, 483450100.00 ns, 57.6317 ns/op
WorkloadWarmup   5: 8388608 op, 1322067600.00 ns, 157.6027 ns/op
WorkloadWarmup   6: 8388608 op, 506067100.00 ns, 60.3279 ns/op

// BeforeActualRun
WorkloadActual   1: 8388608 op, 443949300.00 ns, 52.9229 ns/op
WorkloadActual   2: 8388608 op, 473207500.00 ns, 56.4107 ns/op
WorkloadActual   3: 8388608 op, 445871200.00 ns, 53.1520 ns/op
WorkloadActual   4: 8388608 op, 478702200.00 ns, 57.0657 ns/op
WorkloadActual   5: 8388608 op, 3383313100.00 ns, 403.3224 ns/op
WorkloadActual   6: 8388608 op, 486871300.00 ns, 58.0396 ns/op
WorkloadActual   7: 8388608 op, 483546900.00 ns, 57.6433 ns/op
WorkloadActual   8: 8388608 op, 481203300.00 ns, 57.3639 ns/op
WorkloadActual   9: 8388608 op, 452077600.00 ns, 53.8918 ns/op
WorkloadActual  10: 8388608 op, 447510700.00 ns, 53.3474 ns/op
WorkloadActual  11: 8388608 op, 458989900.00 ns, 54.7159 ns/op
WorkloadActual  12: 8388608 op, 477056200.00 ns, 56.8695 ns/op
WorkloadActual  13: 8388608 op, 464254100.00 ns, 55.3434 ns/op
WorkloadActual  14: 8388608 op, 488863500.00 ns, 58.2771 ns/op
WorkloadActual  15: 8388608 op, 462762100.00 ns, 55.1655 ns/op
WorkloadActual  16: 8388608 op, 482155800.00 ns, 57.4775 ns/op
WorkloadActual  17: 8388608 op, 481428200.00 ns, 57.3907 ns/op

OutOfMemoryException!
BenchmarkDotNet continues to run additional iterations until desired accuracy level is achieved. It's possible only if the benchmark method doesn't have any side-effects.
If your benchmark allocates memory and keeps it alive, you are creating a memory leak.
You should redesign your benchmark and remove the side-effects. You can use `OperationsPerInvoke`, `IterationSetup` and `IterationCleanup` to do that.

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.OutOfMemoryException: Array dimensions exceeded supported range.
   at System.Array.Resize[T](T[]& array, Int32 newSize) in System.Private.CoreLib.dll:token 0x6000182+0x22
   at System.Collections.Generic.Stack`1.Grow(Int32 capacity) in System.Collections.dll:token 0x6000261+0x2d
   at System.Collections.Generic.Stack`1.PushWithResize(T item) in System.Collections.dll:token 0x600025f+0x0
   at BenchmarkTests.StackBenchmark.DefaultListBenchmarkPush() in D:\������\�஥��� C# (VS Community)\�ࠪ⨪� � �ப�\AlgorithmsAndStructers\BenchmarkTests\StackBenchmark.cs:line 23
   at BenchmarkDotNet.Autogenerated.Runnable_0.WorkloadActionUnroll(Int64 invokeCount) in D:\������\�஥��� C# (VS Community)\�ࠪ⨪� � �ப�\AlgorithmsAndStructers\BenchmarkTests\bin\Release\net6.0\187b0782-105b-42f3-9a1c-dbcbf9b47c72\187b0782-105b-42f3-9a1c-dbcbf9b47c72.notcs:line 824
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data) in BenchmarkDotNet.dll:token 0x6000997+0x91
   at BenchmarkDotNet.Engines.EngineActualStage.RunAuto(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor) in BenchmarkDotNet.dll:token 0x60009be+0x39
   at BenchmarkDotNet.Engines.EngineActualStage.Run(Int64 invokeCount, IterationMode iterationMode, Boolean runAuto, Int32 unrollFactor, Boolean forceSpecific) in BenchmarkDotNet.dll:token 0x60009bd+0x3a
   at BenchmarkDotNet.Engines.EngineActualStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, Boolean forceSpecific) in BenchmarkDotNet.dll:token 0x60009bc+0x0
   at BenchmarkDotNet.Engines.Engine.Run() in BenchmarkDotNet.dll:token 0x6000996+0x94
   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(IHost host, String benchmarkName) in D:\������\�஥��� C# (VS Community)\�ࠪ⨪� � �ப�\AlgorithmsAndStructers\BenchmarkTests\bin\Release\net6.0\187b0782-105b-42f3-9a1c-dbcbf9b47c72\187b0782-105b-42f3-9a1c-dbcbf9b47c72.notcs:line 170
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Span`1& arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture) in System.Private.CoreLib.dll:token 0x6005405+0x78
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters) in System.Private.CoreLib.dll:token 0x6005309+0x0
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\������\�஥��� C# (VS Community)\�ࠪ⨪� � �ப�\AlgorithmsAndStructers\BenchmarkTests\bin\Release\net6.0\187b0782-105b-42f3-9a1c-dbcbf9b47c72\187b0782-105b-42f3-9a1c-dbcbf9b47c72.notcs:line 52
// AfterAll
// Benchmark Process 15900 has exited with code -1.
// * Artifacts cleanup *
