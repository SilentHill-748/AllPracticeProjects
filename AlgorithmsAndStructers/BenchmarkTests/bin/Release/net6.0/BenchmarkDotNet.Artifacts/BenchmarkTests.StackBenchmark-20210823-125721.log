// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 4 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Кодинг\Проекты C# (VS Community)\Практика и уроки\AlgorithmsAndStructers\BenchmarkTests\bin\Release\net6.0\ccf3f2b6-515f-4eb5-b400-2215270d1e0f
// command took 2,23s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Кодинг\Проекты C# (VS Community)\Практика и уроки\AlgorithmsAndStructers\BenchmarkTests\bin\Release\net6.0\ccf3f2b6-515f-4eb5-b400-2215270d1e0f
// command took 14,35s and exited with 1
// start dotnet build -c Release  --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Кодинг\Проекты C# (VS Community)\Практика и уроки\AlgorithmsAndStructers\BenchmarkTests\bin\Release\net6.0\ccf3f2b6-515f-4eb5-b400-2215270d1e0f
// command took 3,9s and exited with 0
// ***** Done, took 00:00:20 (20.62 sec)   *****
// Found 4 benchmarks:
//   StackBenchmark.DefaultListBenchmarkPush: DefaultJob
//   StackBenchmark.MyListBenchmarkPush: DefaultJob
//   StackBenchmark.DefaultListBenchmarkPop: DefaultJob
//   StackBenchmark.MyListBenchmarkPop: DefaultJob

// **************************
// Benchmark: StackBenchmark.DefaultListBenchmarkPush: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "ccf3f2b6-515f-4eb5-b400-2215270d1e0f.dll" --benchmarkName "BenchmarkTests.StackBenchmark.DefaultListBenchmarkPush" --job "Default" --benchmarkId 0 in D:\Кодинг\Проекты C# (VS Community)\Практика и уроки\AlgorithmsAndStructers\BenchmarkTests\bin\Release\net6.0\ccf3f2b6-515f-4eb5-b400-2215270d1e0f\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.0 (6.0.21.37719), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 276100.00 ns, 276.1000 us/op
WorkloadJitting  1: 1 op, 456600.00 ns, 456.6000 us/op

OverheadJitting  2: 16 op, 539000.00 ns, 33.6875 us/op
WorkloadJitting  2: 16 op, 436800.00 ns, 27.3000 us/op

WorkloadPilot    1: 16 op, 6200.00 ns, 387.5000 ns/op
WorkloadPilot    2: 32 op, 3100.00 ns, 96.8750 ns/op
WorkloadPilot    3: 64 op, 11700.00 ns, 182.8125 ns/op
WorkloadPilot    4: 128 op, 11600.00 ns, 90.6250 ns/op
WorkloadPilot    5: 256 op, 15500.00 ns, 60.5469 ns/op
WorkloadPilot    6: 512 op, 38900.00 ns, 75.9766 ns/op
WorkloadPilot    7: 1024 op, 73000.00 ns, 71.2891 ns/op
WorkloadPilot    8: 2048 op, 131600.00 ns, 64.2578 ns/op
WorkloadPilot    9: 4096 op, 350400.00 ns, 85.5469 ns/op
WorkloadPilot   10: 8192 op, 678100.00 ns, 82.7759 ns/op
WorkloadPilot   11: 16384 op, 1199300.00 ns, 73.1995 ns/op
WorkloadPilot   12: 32768 op, 2674900.00 ns, 81.6315 ns/op
WorkloadPilot   13: 65536 op, 6110500.00 ns, 93.2388 ns/op
WorkloadPilot   14: 131072 op, 10189400.00 ns, 77.7390 ns/op
WorkloadPilot   15: 262144 op, 21808800.00 ns, 83.1940 ns/op
WorkloadPilot   16: 524288 op, 35344400.00 ns, 67.4141 ns/op
WorkloadPilot   17: 1048576 op, 84610800.00 ns, 80.6911 ns/op
WorkloadPilot   18: 2097152 op, 162376200.00 ns, 77.4270 ns/op
WorkloadPilot   19: 4194304 op, 328962900.00 ns, 78.4309 ns/op
WorkloadPilot   20: 8388608 op, 643472600.00 ns, 76.7079 ns/op

OverheadWarmup   1: 8388608 op, 29298500.00 ns, 3.4927 ns/op
OverheadWarmup   2: 8388608 op, 29090600.00 ns, 3.4679 ns/op
OverheadWarmup   3: 8388608 op, 29412200.00 ns, 3.5062 ns/op
OverheadWarmup   4: 8388608 op, 32735400.00 ns, 3.9024 ns/op
OverheadWarmup   5: 8388608 op, 26973700.00 ns, 3.2155 ns/op
OverheadWarmup   6: 8388608 op, 30366000.00 ns, 3.6199 ns/op
OverheadWarmup   7: 8388608 op, 25765300.00 ns, 3.0715 ns/op

OverheadActual   1: 8388608 op, 27669400.00 ns, 3.2984 ns/op
OverheadActual   2: 8388608 op, 28533000.00 ns, 3.4014 ns/op
OverheadActual   3: 8388608 op, 30234900.00 ns, 3.6043 ns/op
OverheadActual   4: 8388608 op, 31900700.00 ns, 3.8029 ns/op
OverheadActual   5: 8388608 op, 31275300.00 ns, 3.7283 ns/op
OverheadActual   6: 8388608 op, 29471300.00 ns, 3.5133 ns/op
OverheadActual   7: 8388608 op, 27719200.00 ns, 3.3044 ns/op
OverheadActual   8: 8388608 op, 18966200.00 ns, 2.2609 ns/op
OverheadActual   9: 8388608 op, 17628300.00 ns, 2.1015 ns/op
OverheadActual  10: 8388608 op, 18434300.00 ns, 2.1975 ns/op
OverheadActual  11: 8388608 op, 18467700.00 ns, 2.2015 ns/op
OverheadActual  12: 8388608 op, 18331000.00 ns, 2.1852 ns/op
OverheadActual  13: 8388608 op, 17087600.00 ns, 2.0370 ns/op
OverheadActual  14: 8388608 op, 20251000.00 ns, 2.4141 ns/op
OverheadActual  15: 8388608 op, 16611800.00 ns, 1.9803 ns/op
OverheadActual  16: 8388608 op, 19120800.00 ns, 2.2794 ns/op
OverheadActual  17: 8388608 op, 16585300.00 ns, 1.9771 ns/op
OverheadActual  18: 8388608 op, 16653900.00 ns, 1.9853 ns/op
OverheadActual  19: 8388608 op, 17031700.00 ns, 2.0303 ns/op
OverheadActual  20: 8388608 op, 17665300.00 ns, 2.1059 ns/op

WorkloadWarmup   1: 8388608 op, 477814200.00 ns, 56.9599 ns/op
WorkloadWarmup   2: 8388608 op, 854958100.00 ns, 101.9189 ns/op
WorkloadWarmup   3: 8388608 op, 496521100.00 ns, 59.1899 ns/op
WorkloadWarmup   4: 8388608 op, 486054400.00 ns, 57.9422 ns/op
WorkloadWarmup   5: 8388608 op, 1295463600.00 ns, 154.4313 ns/op
WorkloadWarmup   6: 8388608 op, 513738400.00 ns, 61.2424 ns/op

// BeforeActualRun
WorkloadActual   1: 8388608 op, 453879000.00 ns, 54.1066 ns/op
WorkloadActual   2: 8388608 op, 484324000.00 ns, 57.7359 ns/op
WorkloadActual   3: 8388608 op, 458392400.00 ns, 54.6446 ns/op
WorkloadActual   4: 8388608 op, 477701900.00 ns, 56.9465 ns/op
WorkloadActual   5: 8388608 op, 4076716200.00 ns, 485.9824 ns/op
WorkloadActual   6: 8388608 op, 483487200.00 ns, 57.6362 ns/op
WorkloadActual   7: 8388608 op, 444278100.00 ns, 52.9621 ns/op
WorkloadActual   8: 8388608 op, 467999900.00 ns, 55.7899 ns/op
WorkloadActual   9: 8388608 op, 477368500.00 ns, 56.9068 ns/op
WorkloadActual  10: 8388608 op, 473822600.00 ns, 56.4841 ns/op
WorkloadActual  11: 8388608 op, 478219300.00 ns, 57.0082 ns/op
WorkloadActual  12: 8388608 op, 487214400.00 ns, 58.0805 ns/op
WorkloadActual  13: 8388608 op, 483292400.00 ns, 57.6129 ns/op
WorkloadActual  14: 8388608 op, 473309700.00 ns, 56.4229 ns/op
WorkloadActual  15: 8388608 op, 480031900.00 ns, 57.2243 ns/op
WorkloadActual  16: 8388608 op, 501677100.00 ns, 59.8046 ns/op
WorkloadActual  17: 8388608 op, 532619700.00 ns, 63.4932 ns/op

OutOfMemoryException!
BenchmarkDotNet continues to run additional iterations until desired accuracy level is achieved. It's possible only if the benchmark method doesn't have any side-effects.
If your benchmark allocates memory and keeps it alive, you are creating a memory leak.
You should redesign your benchmark and remove the side-effects. You can use `OperationsPerInvoke`, `IterationSetup` and `IterationCleanup` to do that.

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.OutOfMemoryException: Array dimensions exceeded supported range.
   at System.Array.Resize[T](T[]& array, Int32 newSize) in System.Private.CoreLib.dll:token 0x6000182+0x22
   at System.Collections.Generic.Stack`1.Grow(Int32 capacity) in System.Collections.dll:token 0x6000261+0x2d
   at System.Collections.Generic.Stack`1.PushWithResize(T item) in System.Collections.dll:token 0x600025f+0x0
   at BenchmarkTests.StackBenchmark.DefaultListBenchmarkPush() in D:\������\�஥��� C# (VS Community)\�ࠪ⨪� � �ப�\AlgorithmsAndStructers\BenchmarkTests\StackBenchmark.cs:line 23
   at BenchmarkDotNet.Autogenerated.Runnable_0.WorkloadActionUnroll(Int64 invokeCount) in D:\������\�஥��� C# (VS Community)\�ࠪ⨪� � �ப�\AlgorithmsAndStructers\BenchmarkTests\bin\Release\net6.0\ccf3f2b6-515f-4eb5-b400-2215270d1e0f\ccf3f2b6-515f-4eb5-b400-2215270d1e0f.notcs:line 826
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data) in BenchmarkDotNet.dll:token 0x6000997+0x91
   at BenchmarkDotNet.Engines.EngineActualStage.RunAuto(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor) in BenchmarkDotNet.dll:token 0x60009be+0x39
   at BenchmarkDotNet.Engines.EngineActualStage.Run(Int64 invokeCount, IterationMode iterationMode, Boolean runAuto, Int32 unrollFactor, Boolean forceSpecific) in BenchmarkDotNet.dll:token 0x60009bd+0x3a
   at BenchmarkDotNet.Engines.EngineActualStage.RunWorkload(Int64 invokeCount, Int32 unrollFactor, Boolean forceSpecific) in BenchmarkDotNet.dll:token 0x60009bc+0x0
   at BenchmarkDotNet.Engines.Engine.Run() in BenchmarkDotNet.dll:token 0x6000996+0x94
   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(IHost host, String benchmarkName) in D:\������\�஥��� C# (VS Community)\�ࠪ⨪� � �ப�\AlgorithmsAndStructers\BenchmarkTests\bin\Release\net6.0\ccf3f2b6-515f-4eb5-b400-2215270d1e0f\ccf3f2b6-515f-4eb5-b400-2215270d1e0f.notcs:line 172
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Span`1& arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture) in System.Private.CoreLib.dll:token 0x6005405+0x78
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters) in System.Private.CoreLib.dll:token 0x6005309+0x0
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\������\�஥��� C# (VS Community)\�ࠪ⨪� � �ப�\AlgorithmsAndStructers\BenchmarkTests\bin\Release\net6.0\ccf3f2b6-515f-4eb5-b400-2215270d1e0f\ccf3f2b6-515f-4eb5-b400-2215270d1e0f.notcs:line 54
// AfterAll
// Benchmark Process 912 has exited with code -1.
// * Artifacts cleanup *
